{"version":3,"file":"subTask.js","sourceRoot":"","sources":["../../../src/controllers/subTask.ts"],"names":[],"mappings":"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","sourcesContent":["import { NextFunction, Request, Response } from 'express'\nimport { AppError, HttpCode } from '../utils/AppError'\nimport SubTask from '../models/SubTask'\nimport Task from '../models/Task'\n\nexport const createSubtask = async (req: Request, res: Response, next: NextFunction) => {\n   const { title, isCompleted, status } = req.body\n\n   const task = await Task.findOne({ status })\n   const newSubtask = new SubTask({ title, isCompleted, status, boardID: task?.boardID })\n\n   try {\n      await newSubtask.save()\n      await Task.findOneAndUpdate({ status }, { $push: { subtasks: newSubtask } }, { new: true, runValidators: true })\n\n      res.status(201).json(newSubtask)\n   } catch (error) {\n      next(error)\n   }\n}\n\nexport const getSubtasks = async (_req: Request, res: Response, next: NextFunction) => {\n   try {\n      const subtask = await SubTask.find()\n\n      if (!subtask) {\n         throw new AppError({\n            httpCode: HttpCode.NOT_FOUND,\n            description: 'Subtask is not found',\n         })\n      }\n\n      res.status(200).json(subtask)\n   } catch (error) {\n      next(error)\n   }\n}\n\nexport const updateSubtask = async (req: Request, res: Response, next: NextFunction) => {\n   const updates = Object.keys(req.body)\n   const allowUpdates = ['title', 'isCompleted', 'status']\n   const isValidoperation = updates.every((update) => allowUpdates.includes(update))\n\n   try {\n      if (!isValidoperation) {\n         throw new AppError({\n            httpCode: HttpCode.BAD_REQUEST,\n            description: 'Invalid subtask value field update! ',\n         })\n      }\n\n      const subtask = await SubTask.findByIdAndUpdate(req.params.id, req.body, { new: true, runValidators: true })\n\n      if (!subtask) {\n         throw new AppError({\n            httpCode: HttpCode.NOT_FOUND,\n            description: 'Subtask is not found',\n         })\n      }\n\n      res.status(201).json(subtask)\n   } catch (error) {\n      next(error)\n   }\n}\n\nexport const deleteSubtask = async (req: Request, res: Response, next: NextFunction) => {\n   try {\n      const subtask = await SubTask.findByIdAndDelete(req.params.id)\n\n      if (!subtask) {\n         throw new AppError({\n            httpCode: HttpCode.NOT_FOUND,\n            description: 'Subtask is not found',\n         })\n      }\n\n      res.status(200).json(subtask)\n   } catch (error) {\n      next(error)\n   }\n}\n"]}