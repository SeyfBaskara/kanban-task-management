{"version":3,"file":"task.js","sourceRoot":"","sources":["../../../src/controllers/task.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;AAAA,gDAAsD;AAEtD,0DAAiC;AACjC,8DAAqC;AAE9B,MAAM,UAAU,GAAG,CAAO,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IACjF,MAAM,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,OAAO,EAAE,GAAG,GAAG,CAAC,IAAI,CAAA;IAExD,MAAM,OAAO,GAAG,IAAI,cAAI,CAAC,EAAE,KAAK,EAAE,WAAW,EAAE,MAAM,EAAE,OAAO,EAAE,CAAC,CAAA;IACjE,IAAI;QACD,MAAM,OAAO,CAAC,IAAI,EAAE,CAAA;QACpB,MAAM,gBAAM,CAAC,gBAAgB,CAAC,EAAE,IAAI,EAAE,MAAM,EAAE,OAAO,EAAE,EAAE,EAAE,KAAK,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,EAAE,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAA;QAC3H,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,OAAO,CAAC,CAAA;KAC/B;IAAC,OAAO,KAAK,EAAE;QACb,IAAI,CAAC,KAAK,CAAC,CAAA;KACb;AACJ,CAAC,CAAA,CAAA;AAXY,QAAA,UAAU,cAWtB;AAEM,MAAM,QAAQ,GAAG,CAAO,IAAa,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IAChF,IAAI;QACD,MAAM,IAAI,GAAG,MAAM,cAAI,CAAC,IAAI,EAAE,CAAA;QAE9B,IAAI,CAAC,IAAI,EAAE;YACR,MAAM,IAAI,mBAAQ,CAAC;gBAChB,QAAQ,EAAE,mBAAQ,CAAC,SAAS;gBAC5B,WAAW,EAAE,mBAAmB;aAClC,CAAC,CAAA;SACJ;QAED,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;KAC5B;IAAC,OAAO,KAAK,EAAE;QACb,IAAI,CAAC,KAAK,CAAC,CAAA;KACb;AACJ,CAAC,CAAA,CAAA;AAfY,QAAA,QAAQ,YAepB;AAEM,MAAM,UAAU,GAAG,CAAO,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IACjF,MAAM,OAAO,GAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,IAAI,CAAC,CAAA;IACrC,MAAM,YAAY,GAAG,CAAC,OAAO,EAAE,aAAa,EAAE,QAAQ,CAAC,CAAA;IACvD,MAAM,gBAAgB,GAAG,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE,EAAE,CAAC,YAAY,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAA;IAEjF,IAAI;QACD,IAAI,CAAC,gBAAgB,EAAE;YACpB,MAAM,IAAI,mBAAQ,CAAC;gBAChB,QAAQ,EAAE,mBAAQ,CAAC,WAAW;gBAC9B,WAAW,EAAE,mCAAmC;aAClD,CAAC,CAAA;SACJ;QAED,MAAM,IAAI,GAAG,MAAM,cAAI,CAAC,iBAAiB,CAAC,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,GAAG,CAAC,IAAI,EAAE,EAAE,GAAG,EAAE,IAAI,EAAE,aAAa,EAAE,IAAI,EAAE,CAAC,CAAA;QAEtG,IAAI,CAAC,IAAI,EAAE;YACR,MAAM,IAAI,mBAAQ,CAAC;gBAChB,QAAQ,EAAE,mBAAQ,CAAC,SAAS;gBAC5B,WAAW,EAAE,mBAAmB;aAClC,CAAC,CAAA;SACJ;QAED,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;KAC5B;IAAC,OAAO,KAAK,EAAE;QACb,IAAI,CAAC,KAAK,CAAC,CAAA;KACb;AACJ,CAAC,CAAA,CAAA;AA1BY,QAAA,UAAU,cA0BtB;AAEM,MAAM,UAAU,GAAG,CAAO,GAAY,EAAE,GAAa,EAAE,IAAkB,EAAE,EAAE;IACjF,IAAI;QACD,MAAM,IAAI,GAAG,MAAM,cAAI,CAAC,OAAO,CAAC,EAAE,GAAG,EAAE,GAAG,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAA;QAEvD,IAAI,CAAC,IAAI,EAAE;YACR,MAAM,IAAI,mBAAQ,CAAC;gBAChB,QAAQ,EAAE,mBAAQ,CAAC,SAAS;gBAC5B,WAAW,EAAE,mBAAmB;aAClC,CAAC,CAAA;SACJ;QAED,MAAM,IAAI,CAAC,SAAS,EAAE,CAAA;QACtB,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;KAC5B;IAAC,OAAO,KAAK,EAAE;QACb,IAAI,CAAC,KAAK,CAAC,CAAA;KACb;AACJ,CAAC,CAAA,CAAA;AAhBY,QAAA,UAAU,cAgBtB","sourcesContent":["import { AppError, HttpCode } from '../utils/AppError'\nimport { NextFunction, Request, Response } from 'express'\nimport Task from '../models/Task'\nimport Column from '../models/Column'\n\nexport const createTask = async (req: Request, res: Response, next: NextFunction) => {\n   const { title, description, status, boardID } = req.body\n\n   const newTask = new Task({ title, description, status, boardID })\n   try {\n      await newTask.save()\n      await Column.findOneAndUpdate({ name: status, boardID }, { $push: { tasks: newTask } }, { new: true, runValidators: true })\n      res.status(201).json(newTask)\n   } catch (error) {\n      next(error)\n   }\n}\n\nexport const getTasks = async (_req: Request, res: Response, next: NextFunction) => {\n   try {\n      const task = await Task.find()\n\n      if (!task) {\n         throw new AppError({\n            httpCode: HttpCode.NOT_FOUND,\n            description: 'Task is not found',\n         })\n      }\n\n      res.status(200).json(task)\n   } catch (error) {\n      next(error)\n   }\n}\n\nexport const updateTask = async (req: Request, res: Response, next: NextFunction) => {\n   const updates = Object.keys(req.body)\n   const allowUpdates = ['title', 'description', 'status']\n   const isValidoperation = updates.every((update) => allowUpdates.includes(update))\n\n   try {\n      if (!isValidoperation) {\n         throw new AppError({\n            httpCode: HttpCode.BAD_REQUEST,\n            description: 'Invalid task value field update! ',\n         })\n      }\n\n      const task = await Task.findByIdAndUpdate(req.params.id, req.body, { new: true, runValidators: true })\n\n      if (!task) {\n         throw new AppError({\n            httpCode: HttpCode.NOT_FOUND,\n            description: 'Task is not found',\n         })\n      }\n\n      res.status(201).json(task)\n   } catch (error) {\n      next(error)\n   }\n}\n\nexport const deleteTask = async (req: Request, res: Response, next: NextFunction) => {\n   try {\n      const task = await Task.findOne({ _id: req.params.id })\n\n      if (!task) {\n         throw new AppError({\n            httpCode: HttpCode.NOT_FOUND,\n            description: 'Task is not found',\n         })\n      }\n\n      await task.deleteOne()\n      res.status(200).json(task)\n   } catch (error) {\n      next(error)\n   }\n}\n"]}