{"version":3,"file":"ExitHandler.js","sourceRoot":"","sources":["../../../src/utils/ExitHandler.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,yCAAqD;AAErD,MAAM,WAAW;IACD,UAAU,CAAC,IAAY,EAAE,OAAO,GAAG,IAAI;;YACjD,IAAI;gBACD,OAAO,CAAC,GAAG,CAAC,4CAA4C,IAAI,EAAE,CAAC,CAAA;gBAE/D,UAAU,CAAC,GAAG,EAAE;oBACb,OAAO,CAAC,GAAG,CAAC,gCAAgC,IAAI,EAAE,CAAC,CAAA;oBACnD,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;gBACrB,CAAC,EAAE,OAAO,CAAC,CAAC,KAAK,EAAE,CAAA;gBAEnB,IAAI,eAAM,CAAC,SAAS,EAAE;oBACnB,OAAO,CAAC,GAAG,CAAC,8BAA8B,CAAC,CAAA;oBAC3C,MAAM,uBAAc,CAAC,SAAS,EAAE,CAAA;iBAClC;gBAED,OAAO,CAAC,GAAG,CAAC,gCAAgC,IAAI,EAAE,CAAC,CAAA;gBACnD,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;aACpB;YAAC,OAAO,KAAK,EAAE;gBACb,OAAO,CAAC,GAAG,CAAC,gCAAgC,CAAC,CAAA;gBAC7C,OAAO,CAAC,GAAG,CAAC,KAAK,CAAC,CAAA;gBAClB,OAAO,CAAC,GAAG,CAAC,0BAA0B,IAAI,EAAE,CAAC,CAAA;gBAC7C,OAAO,CAAC,IAAI,CAAC,IAAI,CAAC,CAAA;aACpB;QACJ,CAAC;KAAA;CACH;AAEY,QAAA,WAAW,GAAG,IAAI,WAAW,EAAE,CAAA","sourcesContent":["import { httpTerminator, server } from '../../server'\n\nclass ExitHandler {\n   public async handleExit(code: number, timeout = 5000): Promise<void> {\n      try {\n         console.log(`Attempting a graceful shutdown with code ${code}`)\n\n         setTimeout(() => {\n            console.log(`Forcing a shutdown with code ${code}`)\n            process.exit(code)\n         }, timeout).unref()\n\n         if (server.listening) {\n            console.log('Terminating HTTP connections')\n            await httpTerminator.terminate()\n         }\n\n         console.log(`Exiting gracefully with code ${code}`)\n         process.exit(code)\n      } catch (error) {\n         console.log('Error shutting down gracefully')\n         console.log(error)\n         console.log(`Forcing exit with code ${code}`)\n         process.exit(code)\n      }\n   }\n}\n\nexport const exitHandler = new ExitHandler()\n"]}